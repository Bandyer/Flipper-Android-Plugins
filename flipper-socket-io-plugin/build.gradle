plugins {
    id 'com.android.library'
    id 'org.jetbrains.kotlin.android'
    id 'maven-publish'
}

def projectGroup = "com.bandyer.flipper"
def projectName = "flipper-socket-io-plugin"

version = "1.1.0"

android {
    compileSdk 31

    defaultConfig {
        minSdk 21
        targetSdk 31
        versionName version

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

Properties properties = new Properties()
if (project.rootProject.file("local.properties").exists()) {
    properties.load(project.rootProject.file('local.properties').newDataInputStream())
}

afterEvaluate {
    publishing {
        repositories {
            maven {
                url = "s3://maven-bandyer/releases/"
                credentials(AwsCredentials) {
                    accessKey = properties.getProperty("maven.accessKey")
                    secretKey = properties.getProperty("maven.secretKey")
                }
            }
        }

        publications {
            release(MavenPublication) {
                from components.release
                groupId = projectGroup
                artifactId = projectName
                version = version
            }
        }
    }
}

task invalidateCache(type: Exec) {
    workingDir '../scripts'
    def publishPath = "releases"
    def packageName = projectGroup + "." + project.getName()
    commandLine 'python3', './invalidate_s3_cache.py', properties.getProperty("maven.accessKey") ?: "", properties.getProperty("maven.secretKey") ?: "", properties.getProperty("maven.distributionId") ?: "", publishPath, packageName, version
}

task publishUpload {
    def dryRun = false
    def publishTask = 'publishToMavenLocal'
    if (!dryRun) publishTask = 'publish'
    dependsOn publishTask
    dependsOn 'invalidateCache'
    tasks.findByName('invalidateCache').mustRunAfter publishTask
}

dependencies {

    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.appcompat:appcompat:1.4.1'
    implementation 'com.google.android.material:material:1.5.0'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

    compileOnly "com.squareup.okhttp3:okhttp:4.9.1"
    implementation "com.facebook.flipper:flipper:0.131.1"
    implementation 'com.facebook.flipper:flipper-network-plugin:0.131.1'
}